"use client";

import { useState } from "react";
import Image from "next/image";

// Event type images mapping
const eventImages: { [key: string]: string } = {
  workshop: "/Images/anime/workshop.png",
  seminar: "/Images/anime/seminars.png",
  hackathon: "/Images/anime/hackathon.png",
  quiz: "/Images/anime/quiz.png",
  coding: "/Images/anime/codingComp.png",
  project: "/Images/anime/project.png",
  default: "/Images/anime/seminars.png"
};

// Helper function to determine event type
const getEventType = (title: string): string => {
  title = title.toLowerCase();
  if (title.includes("workshop")) return "workshop";
  if (title.includes("seminar")) return "seminar";
  if (title.includes("hackathon")) return "hackathon";
  if (title.includes("quiz") || title.includes("kwiz")) return "quiz";
  if (title.includes("coding") || title.includes("code")) return "coding";
  if (title.includes("project")) return "project";
  return "default";
};

// Events data
const events = [
  {
    title: "Inaugural of club and Launch of TechTycoons Website",
    details: "Inaugural of club and Launch of TechTycoons Website, around 100 students attend the event, Dr. Hanumantha Rao, Principal-MECS guest",
    date: "12/30/2022, 11:00:00 AM",
  },
  // ... (rest of your events array)
];

// Sort events by date in descending order (most recent first)
const sortedEvents = [...events].sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());

export default function EventsPage() {
  const [filter, setFilter] = useState("all"); // all, past, upcoming

  // Filter events based on current date
  const currentDate = new Date();
  const filteredEvents = sortedEvents.filter((event) => {
    const eventDate = new Date(event.date);
    if (filter === "upcoming") {
      return eventDate > currentDate;
    } else if (filter === "past") {
      return eventDate < currentDate;
    }
    return true;
  });

  return (
    <main className="min-h-screen bg-[#f6f7fa]">
      {/* Banner Section */}
      <section className="relative bg-[#0b0d23] text-white py-20 px-4">
        <div className="max-w-6xl mx-auto text-center">
          <h1 className="text-4xl md:text-5xl font-bold mb-4" style={{ fontFamily: "var(--font-orbitron)" }}>
            Our Events
          </h1>
          <p className="text-xl text-gray-300" style={{ fontFamily: "var(--font-rajdhani)" }}>
            Discover our technical events and activities
          </p>
        </div>
      </section>

      {/* Filters Section */}
      <section className="py-8 bg-white shadow-sm">
        <div className="max-w-6xl mx-auto px-4">
          <div className="flex justify-center space-x-4">
            <button
              onClick={() => setFilter("all")}
              className={`px-6 py-2 rounded-full transition-colors ${
                filter === "all"
                  ? "bg-blue-600 text-white"
                  : "bg-gray-100 text-gray-700 hover:bg-gray-200"
              }`}
            >
              All Events
            </button>
            <button
              onClick={() => setFilter("upcoming")}
              className={`px-6 py-2 rounded-full transition-colors ${
                filter === "upcoming"
                  ? "bg-blue-600 text-white"
                  : "bg-gray-100 text-gray-700 hover:bg-gray-200"
              }`}
            >
              Upcoming
            </button>
            <button
              onClick={() => setFilter("past")}
              className={`px-6 py-2 rounded-full transition-colors ${
                filter === "past"
                  ? "bg-blue-600 text-white"
                  : "bg-gray-100 text-gray-700 hover:bg-gray-200"
              }`}
            >
              Past Events
            </button>
          </div>
        </div>
      </section>

      {/* Events List */}
      <section className="py-12 px-4">
        <div className="max-w-5xl mx-auto space-y-6">
          {filteredEvents.map((event, idx) => (
            <div
              key={idx}
              className="bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden border border-gray-100"
            >
              <div className="flex flex-col md:flex-row">
                <div className="md:w-1/3 relative">
                  <div className="aspect-w-16 aspect-h-9 md:aspect-h-full">
                    <Image
                      src={eventImages[getEventType(event.title)]}
                      alt={event.title}
                      width={400}
                      height={300}
                      className="w-full h-48 md:h-full object-cover"
                    />
                  </div>
                </div>
                <div className="md:w-2/3 p-6">
                  <div className="flex justify-between items-start">
                    <h2 className="text-xl font-bold text-gray-900 mb-2" style={{ fontFamily: "var(--font-rajdhani)" }}>
                      {event.title}
                    </h2>
                    <span className="text-sm text-gray-500 whitespace-nowrap ml-4">
                      {new Date(event.date).toLocaleDateString("en-US", {
                        day: "numeric",
                        month: "short",
                        year: "numeric",
                      })}
                    </span>
                  </div>
                  {event.details && (
                    <p className="text-gray-600 mt-2">{event.details}</p>
                  )}
                  <div className="mt-4 text-sm text-gray-500">
                    ðŸ•’ {new Date(event.date).toLocaleTimeString("en-US", {
                      hour: "numeric",
                      minute: "2-digit",
                      hour12: true,
                    })}
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>
    </main>
  );
}